const mongoose = require('mongoose');
const dotenv = require('dotenv');

dotenv.config({ path: '.env' });

async function start() {
    try {
        if (!process.env.MONGODB_URL) {
            throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç MONGODB_URL –≤ —Ñ–∞–π–ª–µ .env');
        }

        mongoose.connection.on('connected', () => {
            console.log('‚úÖ  Mongoose —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ MongoDB');
        });

        mongoose.connection.on('error', (err) => {
            console.error('‚ùå  –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Mongoose:', err.message);
        });

        mongoose.connection.on('disconnected', () => {
            console.log('‚ö†Ô∏è  Mongoose –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç MongoDB');
        });

        await mongoose.connect(process.env.MONGODB_URL, {
            serverSelectionTimeoutMS: 30000,
            // useNewUrlParser: true,
            // useUnifiedTopology: true
        });

        console.log("üöÄ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞...");
    } catch (e) {
        console.error('‚ùå  –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', e.message);
        console.error('‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MONGODB_URL:', process.env.MONGODB_URL);
    }
}

module.exports = start;